upstream unicorn_<%= fetch(:nginx_config_name) %> {
<% if fetch(:unicorn_use_tcp) -%>
  <% roles(:app).each do |role| -%>
    server <%= role.hostname %>:<%= fetch(:unicorn_tcp_listen_port)%> fail_timeout=<%= fetch(:nginx_fail_timeout) %>;
  <% end -%>
<% else -%>
  server unix:/tmp/unicorn.<%= fetch(:nginx_config_name) %>.sock fail_timeout=<%= fetch(:nginx_fail_timeout) %>;
<% end -%>
}

<% if fetch(:nginx_use_ssl) -%>
  server{
    listen 80;
    server_name www.quizdang.com quizdang.com;
    rewrite ^(.*) https://www.quizdang.com$1 permanent;
  }

  server{
    listen 443;
    server_name quizdang.com;
    rewrite ^(.*) https://www.quizdang.com$1 permanent;

    ssl on;
    ssl_certificate /etc/ssl/certs/www.quizdang.com.crt;
    ssl_certificate_key /etc/ssl/private/www.quizdang.com.key;
  }
<% else %>
  server{
    listen 80;
    server_name quizdang.com;
    rewrite ^(.*) http://www.$host$1 permanent;
  }
<% end -%>

<% # render the default server directive. If SSL is enabled, port 443 is used %>
<%= template_to_s("_default_server_directive.erb", ssl_port: 443, nginx_pass_ssl_client_cert: false).to_s %>

<% if fetch(:nginx_pass_ssl_client_cert) -%>
<% # render the server directive with SSL client certificate authentication enabled on port 444 %>
<%= template_to_s("_default_server_directive.erb", ssl_port: 444, nginx_pass_ssl_client_cert: true).to_s %>
<% end -%>
